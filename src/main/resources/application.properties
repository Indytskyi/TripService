# ???????????? ????????? ?????? (Data Source)
#spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://postgres:5432/tripsservice
spring.datasource.username=postgres
spring.datasource.password=nickfury

# ???????????? ?????? Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.show_sql=true

# For working HTTP methods PUT, PATCH, DELETE
spring.mvc.hiddenmethod.filter.enabled=true

spring.flyway.enabled=true
spring.flyway.url=jdbc:postgresql://postgres:5432/tripsservice
spring.flyway.user=postgres
spring.flyway.password=nickfury
spring.flyway.group=true
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

#jfkhgkjdfgjdf
#spring.jpa.hibernate.ddl-auto=cre

#for aws
accessKey=AKIAZ5QZH52EJPM5CWGY
secret=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
bucketName=tripsservice
region=eu-north-1
s3Folder=docker/photos

#for mediaFiles
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#for microservices

basicUrlForCarService=http://carServiceApp:8080/
basicUrlForBackOfficeService=http://backofficeServiceApp:8080/
basic.url.for.user.service=http://userServiceApp:8080/
car.url=${basicUrlForCarService}cars/
backOffice.url=${basicUrlForBackOfficeService}user/
user.url=${basic.url.for.user.service}
#kafka
kafka.bootstrap-servers=kafka:9092
kafka.backoffice=finish-order
kafka.car=car-topic
spring.kafka.producer.bootstrap-servers=${kafka.bootstrap-servers}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#spring cloud + eureka
spring.application.name=trip-service
eureka.client.service-url.defaultZone=http://eurekaServer:8761/eureka/
backoffice.service.app.name=backoffice-service
car.service.app.name=car-service
user.service.app.name=user-service
